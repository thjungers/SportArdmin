{
	"info": {
		"_postman_id": "7947bc34-1c2f-4233-adef-e0c45417df6a",
		"name": "Unit tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "27038623-7947bc34-1c2f-4233-adef-e0c45417df6a"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "{user_id}",
					"item": [
						{
							"name": "sessions",
							"item": [
								{
									"name": "{session_id}",
									"item": [
										{
											"name": "Return the usersession",
											"id": "d0e16f8d-cc79-4b3d-8b27-2d1043c29902",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sessions",
														":session_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "session_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Return the usersession"
											},
											"response": [
												{
													"id": "b4e82d9c-0c04-42e6-acb5-a70dea46b04f",
													"name": "The usersession",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"session\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"start_at\": \"<dateTime>\",\n    \"end_at\": \"<dateTime>\",\n    \"section\": {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"is_free\": \"<boolean>\"\n    }\n  },\n  \"payment_method\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"amount_paid\": \"<number>\",\n    \"comment\": \"<string>\",\n    \"user\": {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"email\": \"<email>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    \"section\": {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"is_free\": \"<boolean>\"\n    },\n    \"payed_on\": \"<date>\",\n    \"valid_on\": \"<date>\",\n    \"expires_on\": \"<date>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"is_free\": \"<boolean>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
												},
												{
													"id": "bcdd590b-729c-4e83-b065-2f59d0c2232f",
													"name": "The user, session or usersession does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										},
										{
											"name": "Create or replace the usersession",
											"id": "d431d210-fc59-4949-a3f4-f2e59a9a5d18",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sessions",
														":session_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "session_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Create or replace the usersession"
											},
											"response": [
												{
													"id": "885daed3-daa8-4b9e-a659-05562f848029",
													"name": "The usersession was created or replaced",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "a2e22592-8767-4122-85bd-ee2a02d1a5f9",
													"name": "The user or session does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												},
												{
													"id": "2a3e8287-ca85-4192-a892-8818ad1a5d0c",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										},
										{
											"name": "Update the usersession",
											"id": "17dbc3f9-3e62-47d7-a993-469f4f7e43f7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sessions",
														":session_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "session_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Update the usersession"
											},
											"response": [
												{
													"id": "1c269948-c759-4bb3-b999-60e4293206f2",
													"name": "The usersession was updated",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "f768ed01-a72f-432a-98f9-e660d6c83bb7",
													"name": "The user, session or usersession does not exist",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												},
												{
													"id": "8c6d7b39-5001-43fe-8414-32556cfd2ec5",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										},
										{
											"name": "Delete the usersession",
											"id": "7d1f639d-9a88-4244-a2ad-a6b2c54165bf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sessions",
														":session_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "session_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Delete the usersession"
											},
											"response": [
												{
													"id": "f218369a-a9e2-4f26-bf4a-7f16bea52a05",
													"name": "The usersession was deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "1209f0b7-306b-4267-a8cf-4874055f6a12",
													"name": "The user, session or usersession does not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sessions/:session_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sessions",
																":session_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "session_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										}
									],
									"id": "d93a0b59-f55e-411d-b494-984fab823f3c"
								},
								{
									"name": "Return all usersessions for the user.",
									"id": "43313dfb-39ec-464b-a208-74490385b5ca",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"sessions"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Return all usersessions for the user."
									},
									"response": [
										{
											"id": "50e72de2-8db1-4ee0-97d3-1b198aa18c91",
											"name": "A collection of usersessions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sessions"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"session\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"start_at\": \"<dateTime>\",\n        \"end_at\": \"<dateTime>\",\n        \"section\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"is_free\": \"<boolean>\"\n        }\n      },\n      \"payment_method\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"amount_paid\": \"<number>\",\n        \"comment\": \"<string>\",\n        \"user\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        \"section\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"is_free\": \"<boolean>\"\n        },\n        \"payed_on\": \"<date>\",\n        \"valid_on\": \"<date>\",\n        \"expires_on\": \"<date>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"is_free\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"session\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"start_at\": \"<dateTime>\",\n        \"end_at\": \"<dateTime>\",\n        \"section\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"is_free\": \"<boolean>\"\n        }\n      },\n      \"payment_method\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"amount_paid\": \"<number>\",\n        \"comment\": \"<string>\",\n        \"user\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        \"section\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"is_free\": \"<boolean>\"\n        },\n        \"payed_on\": \"<date>\",\n        \"valid_on\": \"<date>\",\n        \"expires_on\": \"<date>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"is_free\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										},
										{
											"id": "edce82fa-4992-437a-9699-bb7afffc958e",
											"name": "The user does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sessions"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": []
										}
									]
								}
							],
							"id": "944c0712-0266-4b63-9e39-2a2453b48e8b"
						},
						{
							"name": "sections",
							"item": [
								{
									"name": "{section_id}",
									"item": [
										{
											"name": "Assign the user to the section. The `expires_on` date should be at the  latest the 31st August that follows the `valid_on` date.\n",
											"id": "5a4db173-0ddc-40e5-aeac-d1dcfe0657a8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sections/:section_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sections",
														":section_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "section_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Assign the user to the section. The `expires_on` date should be at the  latest the 31st August that follows the `valid_on` date.\n"
											},
											"response": [
												{
													"id": "ecb0bd21-f519-4e59-8d4d-2f20da4e152d",
													"name": "The user was assigned to the section",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sections/:section_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sections",
																":section_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "section_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "68af1c1b-a839-48f9-9bf8-11ce258854c1",
													"name": "The user or the section does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sections/:section_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sections",
																":section_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "section_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "7abbe56d-c744-4bf9-8736-86c86e4cf624",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sections/:section_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sections",
																":section_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "section_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										},
										{
											"name": "Unassign the user from the section",
											"id": "2caf6a5f-40b2-4cdb-ac8d-5a703650474c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sections/:section_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sections",
														":section_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "section_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Unassign the user from the section"
											},
											"response": [
												{
													"id": "fb8e4672-e71d-4025-b4c7-81f05e9c93ad",
													"name": "The user was unassigned",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sections/:section_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sections",
																":section_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "section_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "53b9d61a-d956-4d60-a850-6fa9673b8214",
													"name": "The user or the section does not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/sections/:section_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"sections",
																":section_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "section_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												}
											]
										}
									],
									"id": "5c77fb0e-2222-4dbc-80b8-661f333db1a8"
								},
								{
									"name": "Return all sections for the user. If multiple identical sections exist (identified by their ID), the response only contains distinct sections.\n",
									"id": "ae52f3ee-e442-4ec5-bb8c-8239232a721f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/sections?date=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"sections"
											],
											"query": [
												{
													"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
													"key": "date",
													"value": "<date>"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Return all sections for the user. If multiple identical sections exist (identified by their ID), the response only contains distinct sections.\n"
									},
									"response": [
										{
											"id": "99083eb7-fa29-4772-907c-72b3441646d3",
											"name": "A collection of sections",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sections?date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sections"
													],
													"query": [
														{
															"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
															"key": "date",
															"value": "<date>"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"is_free\": \"<boolean>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"is_free\": \"<boolean>\"\n    }\n  ]\n}"
										},
										{
											"id": "745d7b6b-0b79-4bad-a0cc-8cdbbc6e0e61",
											"name": "The user does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/sections?date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"sections"
													],
													"query": [
														{
															"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
															"key": "date",
															"value": "<date>"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": []
										}
									]
								}
							],
							"id": "aa57c84e-0f4e-4051-8091-6fc1bd9cfd6d"
						},
						{
							"name": "registrations",
							"item": [
								{
									"name": "{registration_id}",
									"item": [
										{
											"name": "Return the registration",
											"id": "b520e6ff-a4c1-48f0-8503-6ec970a3a2dd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"registrations",
														":registration_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "registration_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Return the registration"
											},
											"response": [
												{
													"id": "f867e514-7fe4-4596-a2b0-bea5358dc47b",
													"name": "The registration",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "registration_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"date_of_birth\": \"<date>\",\n  \"phone\": \"<string>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
												},
												{
													"id": "a921144e-221d-477f-9c15-8d66ada193aa",
													"name": "The user or the registration does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "registration_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												}
											]
										},
										{
											"name": "Update the registration",
											"id": "7e5d3721-f9ee-4cf4-9925-2f839df95126",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"date_of_birth\": \"<date>\",\n  \"phone\": \"<string>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"registrations",
														":registration_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "registration_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Update the registration"
											},
											"response": [
												{
													"id": "60bfdb8e-9fe3-4187-9258-6c34f1ca6e1c",
													"name": "The registration was updated",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"date_of_birth\": \"<date>\",\n  \"phone\": \"<string>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "registration_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "fad6c42b-29a5-49f3-bade-c256863c8c2f",
													"name": "The registration does not exist",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"date_of_birth\": \"<date>\",\n  \"phone\": \"<string>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "registration_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "15307381-061b-4863-9b60-1c8f3f4ac238",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"date_of_birth\": \"<date>\",\n  \"phone\": \"<string>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "registration_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										},
										{
											"name": "Delete the registration",
											"id": "aee1de71-9f3b-4322-81b7-182391669495",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"registrations",
														":registration_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "<integer>"
														},
														{
															"key": "registration_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Delete the registration"
											},
											"response": [
												{
													"id": "a54a1c1c-e0be-4c4d-b26d-e9a1501e992e",
													"name": "The registration was deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "registration_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "20a908e8-143b-452b-a067-f236f6ec15d0",
													"name": "The registration does not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "registration_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "79d53b95-d4d9-4a56-85cc-011bd2664a0b",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/registrations/:registration_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"registrations",
																":registration_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "registration_id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										}
									],
									"id": "e1b452f7-42b9-42df-894f-9cbb2a86bcaf"
								},
								{
									"name": "Return all registrations for the user",
									"id": "75caa8d6-a2f7-4d1d-a1f5-19e1a5604457",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/registrations?date=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"registrations"
											],
											"query": [
												{
													"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
													"key": "date",
													"value": "<date>"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Return all registrations for the user"
									},
									"response": [
										{
											"id": "9619b90a-0dc1-4e72-a6a1-e023d02c6010",
											"name": "A collection of registrations",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/registrations?date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"registrations"
													],
													"query": [
														{
															"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
															"key": "date",
															"value": "<date>"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"date_of_birth\": \"<date>\",\n      \"phone\": \"<string>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"date_of_birth\": \"<date>\",\n      \"phone\": \"<string>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										},
										{
											"id": "b07dcae8-943e-45f9-92ca-e0a2c4372539",
											"name": "The user does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/registrations?date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"registrations"
													],
													"query": [
														{
															"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
															"key": "date",
															"value": "<date>"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": []
										}
									]
								}
							],
							"id": "e406e1c1-6258-4dd5-a7be-3678a4655669"
						},
						{
							"name": "payment-methods",
							"item": [
								{
									"name": "Return all payment methods for the user",
									"id": "5ff375ff-cfeb-4fa5-a0db-18efda025b0b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/payment-methods?date=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"payment-methods"
											],
											"query": [
												{
													"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
													"key": "date",
													"value": "<date>"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Return all payment methods for the user"
									},
									"response": [
										{
											"id": "684add52-6843-469d-a890-9f3bb8982c96",
											"name": "A collection of payment methods",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/payment-methods?date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"payment-methods"
													],
													"query": [
														{
															"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
															"key": "date",
															"value": "<date>"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"amount_paid\": \"<number>\",\n      \"comment\": \"<string>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"payed_on\": \"<date>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"amount_paid\": \"<number>\",\n      \"comment\": \"<string>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"payed_on\": \"<date>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										},
										{
											"id": "bf81fc6e-d598-45e1-9f15-3a9d66fa97fb",
											"name": "The user does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/payment-methods?date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"payment-methods"
													],
													"query": [
														{
															"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
															"key": "date",
															"value": "<date>"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": []
										}
									]
								}
							],
							"id": "5893e5af-a4bb-41ea-a120-f47d91d77ea7"
						},
						{
							"name": "Return the user",
							"id": "b752cab2-b0c7-4815-9d7e-14d0c07d3af0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Return the user"
							},
							"response": [
								{
									"id": "55747fc2-4edf-40c3-9674-d206d23df294",
									"name": "The user",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<email>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								},
								{
									"id": "0f60df67-d8cd-417d-93ce-8614a9cb9386",
									"name": "The user does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								}
							]
						},
						{
							"name": "Update the user",
							"id": "04089efd-42ff-424f-9e5f-b6c5fa8f1578",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update the user"
							},
							"response": [
								{
									"id": "00707f8c-3162-49d3-96ec-c6aa85c23d02",
									"name": "The user was updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<email>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "62743ad0-9b30-4c92-836d-d2ef3fffca07",
									"name": "The user does not exist",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<email>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "f07fc626-7b8c-4c6e-acf9-3bbcdef0734f",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<email>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "Delete the user",
							"id": "0ded8dd2-e3a5-4a9c-8822-c8d109edc03e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete the user"
							},
							"response": [
								{
									"id": "7ba993bc-0e50-44c0-8bb8-46e0e4e8d08b",
									"name": "The user was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "c2d13c52-cc69-482f-8212-b3d6a610edf5",
									"name": "The user does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "42c2f31d-9140-4e51-bc92-8238cfd0348f",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						}
					],
					"id": "1c356597-1e93-4505-adaa-539b906f9896"
				},
				{
					"name": "Return all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b327ff0-88fb-482d-ae7a-3cd676705ff3",
								"exec": [
									"pm.test(\"Response code is 200\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"pm.test(\"Response has correct schema\", () => {\r",
									"    pm.response.to.have.jsonSchema({\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"self\": {\"type\": \"string\", \"format\": \"uri\"},\r",
									"            \"kind\":{\"type\": \"string\"},\r",
									"            \"count\":{\"type\": \"integer\"},\r",
									"            \"contents\": {\"type\": \"array\", \"items\": {\r",
									"                \"type\": \"object\",\r",
									"                \"properties\": {\r",
									"                    \"self\": {\"type\": \"string\", \"format\": \"uri\"},\r",
									"                    \"kind\": {\"type\": \"string\"},\r",
									"                    \"id\": {\"type\": \"integer\"},\r",
									"                    \"first_name\": {\"type\": \"string\"},\r",
									"                    \"last_name\": {\"type\": \"string\"},\r",
									"                    \"email\": {\"type\": \"string\", \"format\": \"email\"},\r",
									"                    \"created_at\": {\"type\": \"string\", \"format\": \"date-time\"},\r",
									"                    \"updated_at\": {\"type\": \"string\", \"format\": \"date-time\", \"nullable\": true},\r",
									"                },\r",
									"                \"required\": [\"self\", \"kind\", \"id\", \"first_name\", \"last_name\", \"email\", \"created_at\", \"updated_at\"],\r",
									"                \"additionalProperties\": false\r",
									"            }}\r",
									"        },\r",
									"        \"required\": [\"self\", \"kind\", \"count\", \"contents\"],\r",
									"        \"additionalProperties\": false\r",
									"    })\r",
									"})\r",
									"\r",
									"pm.test(\"Response has valid properties\", () => {\r",
									"    let response = pm.response.json()\r",
									"    pm.expect(response.self, \"Invalid self\").to.equal(pm.variables.replaceIn(\"{{baseUrl}}/users\"))\r",
									"    pm.expect(response.kind, \"Invalid kind\").to.equal(\"Collection\")\r",
									"    pm.expect(response.count, \"Invalid count\").to.equal(response.contents.length)\r",
									"    pm.expect(response.contents.every(elm => elm.kind === \"User\"), \"Invalid contents.kind\").to.be.true\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "fb438c5e-7076-4ca0-bb40-df332d48f613",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Return all users"
					},
					"response": [
						{
							"id": "61f163da-83cd-4121-b26d-efee8b6e1694",
							"name": "A collection of all users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"email\": \"<email>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"email\": \"<email>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new user",
					"id": "a99b02ea-9f98-450e-8311-eaa66b72d71e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<email>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Create a new user"
					},
					"response": [
						{
							"id": "261cdb45-bcca-4d3b-b660-547457fa3a32",
							"name": "The user was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"description": {
										"content": "The location of the created user",
										"type": "text/plain"
									},
									"key": "Location",
									"value": "<string>"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<email>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						},
						{
							"id": "915c4bdb-1022-4b72-a0bf-36e47aef258f",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"email\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			],
			"id": "37871a28-2e3c-447e-9d5e-d991f86329e0"
		},
		{
			"name": "subscriptions",
			"item": [
				{
					"name": "{subscription_id}",
					"item": [
						{
							"name": "Return the subscription",
							"id": "dd38ba94-aa09-4954-8906-a0f0d3ea452e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:subscription_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":subscription_id"
									],
									"variable": [
										{
											"key": "subscription_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Return the subscription"
							},
							"response": [
								{
									"id": "98fa74ef-d464-419e-b60a-58ed95311c53",
									"name": "The subscription",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscriptions/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"section\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"is_free\": \"<boolean>\"\n  },\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								},
								{
									"id": "a6724ff8-a15d-4cdc-98cb-95fd2750d3ae",
									"name": "The subscription does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscriptions/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								}
							]
						},
						{
							"name": "Update the subscription",
							"id": "72668496-dd86-494d-9a09-ce108998755c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:subscription_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":subscription_id"
									],
									"variable": [
										{
											"key": "subscription_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update the subscription"
							},
							"response": [
								{
									"id": "8cad1f98-aca0-41da-ac98-631678f4a813",
									"name": "The subscription was updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/subscriptions/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "25c5f48c-8280-4ea0-ac21-2dd70cdfa235",
									"name": "The subscription does not exist",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/subscriptions/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "e62c9578-a35d-46ab-a7fe-655e15e41001",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/subscriptions/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "Delete the subscription",
							"id": "a6b4ff75-eb09-4995-bc2f-269c4eddcf71",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions/:subscription_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions",
										":subscription_id"
									],
									"variable": [
										{
											"key": "subscription_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete the subscription"
							},
							"response": [
								{
									"id": "b4d918ab-d441-4e3b-9eb8-a240a2afe04e",
									"name": "The subscription was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscriptions/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "df47bc8f-3a8c-4c32-92a5-d563973dee13",
									"name": "The subscription does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscriptions/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "62b69c9b-90b3-41cb-a9ae-b3d0ae7c86d2",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscriptions/:subscription_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						}
					],
					"id": "44d20904-5909-4e3c-b530-e4b53558b481"
				},
				{
					"name": "Return all subscriptions",
					"id": "b8ebd823-639c-4cac-9ae9-0af3bdb93b81",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscriptions?date=<date>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions"
							],
							"query": [
								{
									"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
									"key": "date",
									"value": "<date>"
								}
							]
						},
						"description": "Return all subscriptions"
					},
					"response": [
						{
							"id": "9eade47e-7322-41db-b362-067d40736029",
							"name": "A collection of all subscriptions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscriptions?date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
											"key": "date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"amount_paid\": \"<number>\",\n      \"comment\": \"<string>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      },\n      \"payed_on\": \"<date>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"amount_paid\": \"<number>\",\n      \"comment\": \"<string>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      },\n      \"payed_on\": \"<date>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new subscription",
					"id": "f00957db-8b9d-43e5-8159-efdb69907225",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": \"<string>\",\n  \"amount_paid\": \"<number>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"section\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscriptions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscriptions"
							]
						},
						"description": "Create a new subscription"
					},
					"response": [
						{
							"id": "66c739be-122a-43c5-83fc-27a6826bf772",
							"name": "The subscription was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": \"<string>\",\n  \"amount_paid\": \"<number>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"section\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"description": {
										"content": "The location of the created subscription",
										"type": "text/plain"
									},
									"key": "Location",
									"value": "<string>"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"section\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"is_free\": \"<boolean>\"\n  },\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						},
						{
							"id": "0e013ed5-f319-4d74-880d-6f70bd98a689",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": \"<string>\",\n  \"amount_paid\": \"<number>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"section\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscriptions"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			],
			"id": "b7da3a26-8cbb-4d91-a0e1-4c6ff5afab48"
		},
		{
			"name": "sessions",
			"item": [
				{
					"name": "{session_id}",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "{user_id}",
									"item": [
										{
											"name": "Return the usersession",
											"id": "88687f51-55f0-4009-b5bd-5574f942d06c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "session_id",
															"value": "<integer>"
														},
														{
															"key": "user_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Return the usersession"
											},
											"response": [
												{
													"id": "1951bd01-0bc5-4d80-abdd-20e6875f93e5",
													"name": "The usersession",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"session\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"start_at\": \"<dateTime>\",\n    \"end_at\": \"<dateTime>\",\n    \"section\": {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"is_free\": \"<boolean>\"\n    }\n  },\n  \"payment_method\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"amount_paid\": \"<number>\",\n    \"comment\": \"<string>\",\n    \"user\": {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"email\": \"<email>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    \"section\": {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"is_free\": \"<boolean>\"\n    },\n    \"payed_on\": \"<date>\",\n    \"valid_on\": \"<date>\",\n    \"expires_on\": \"<date>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"is_free\": \"<boolean>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
												},
												{
													"id": "9f2f06c8-07cf-4a42-b677-2662ce38e3af",
													"name": "The user, session or usersession does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										},
										{
											"name": "Create or replace the usersession",
											"id": "a92305a9-cb31-4a49-815c-d79acde0f07d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "session_id",
															"value": "<integer>"
														},
														{
															"key": "user_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Create or replace the usersession"
											},
											"response": [
												{
													"id": "63d34b99-643b-4e70-ba0c-706723df24df",
													"name": "The usersession was created or replaced",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "b2918334-9ed7-472c-94fe-dd8462d6bd42",
													"name": "The user or session does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												},
												{
													"id": "493222ad-598a-4618-9b0a-4c1bd8a01217",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										},
										{
											"name": "Update the usersession",
											"id": "9c80ba1d-4476-46e1-8b4f-e6883fc30736",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "session_id",
															"value": "<integer>"
														},
														{
															"key": "user_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Update the usersession"
											},
											"response": [
												{
													"id": "6048622d-8e74-4e05-b1fd-39e79ba79f26",
													"name": "The usersession was updated",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "d5f717a9-0dc7-4a87-8fe3-aa24ce558e80",
													"name": "The user, session or usersession does not exist",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												},
												{
													"id": "699780d7-e82e-44bc-af42-42f2bc42b96f",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"is_free\": \"<boolean>\",\n  \"payment_method\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										},
										{
											"name": "Delete the usersession",
											"id": "34939874-b909-49f8-a7df-32b2749f98a4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "session_id",
															"value": "<integer>"
														},
														{
															"key": "user_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Delete the usersession"
											},
											"response": [
												{
													"id": "d604bf96-6c1b-44af-bd34-77528ca7c474",
													"name": "The usersession was deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "ee1d0db1-625c-4de5-adae-ca42ce16c4e9",
													"name": "The user, session or usersession does not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										}
									],
									"id": "8ef3ffc3-2f8c-4863-9ff6-f5ef79f89eed"
								},
								{
									"name": "Return all usersessions for the session",
									"id": "fa22947b-dcbe-482e-9382-04329978495b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id",
												"users"
											],
											"variable": [
												{
													"key": "session_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Return all usersessions for the session"
									},
									"response": [
										{
											"id": "817a462a-a2f4-4009-8cf2-3c387c14acd2",
											"name": "A collection of usersessions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"users"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"session\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"start_at\": \"<dateTime>\",\n        \"end_at\": \"<dateTime>\",\n        \"section\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"is_free\": \"<boolean>\"\n        }\n      },\n      \"payment_method\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"amount_paid\": \"<number>\",\n        \"comment\": \"<string>\",\n        \"user\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        \"section\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"is_free\": \"<boolean>\"\n        },\n        \"payed_on\": \"<date>\",\n        \"valid_on\": \"<date>\",\n        \"expires_on\": \"<date>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"is_free\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"session\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"start_at\": \"<dateTime>\",\n        \"end_at\": \"<dateTime>\",\n        \"section\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"is_free\": \"<boolean>\"\n        }\n      },\n      \"payment_method\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"amount_paid\": \"<number>\",\n        \"comment\": \"<string>\",\n        \"user\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"created_at\": \"<dateTime>\",\n          \"updated_at\": \"<dateTime>\"\n        },\n        \"section\": {\n          \"self\": \"<string>\",\n          \"kind\": \"<string>\",\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"is_free\": \"<boolean>\"\n        },\n        \"payed_on\": \"<date>\",\n        \"valid_on\": \"<date>\",\n        \"expires_on\": \"<date>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"is_free\": \"<boolean>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										},
										{
											"id": "b03d24a0-8de0-4749-a6ea-d43f32e7d15d",
											"name": "The session does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"users"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": []
										}
									]
								}
							],
							"id": "00c4e5e9-a785-451f-acce-00faa8b9ad75"
						},
						{
							"name": "Return the session",
							"id": "64e5832f-8ee8-4d14-a2a4-1fbe4cc6ce34",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sessions/:session_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions",
										":session_id"
									],
									"variable": [
										{
											"key": "session_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Return the session"
							},
							"response": [
								{
									"id": "31126556-7e6c-42f7-a0c9-2c7904a7202f",
									"name": "The session",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"start_at\": \"<dateTime>\",\n  \"end_at\": \"<dateTime>\",\n  \"section\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"is_free\": \"<boolean>\"\n  }\n}"
								},
								{
									"id": "b883a9e8-9bca-42f6-8b48-b80bea5789d9",
									"name": "The session does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								}
							]
						},
						{
							"name": "Update the session",
							"id": "e2e48ad7-5c9d-4727-ae24-bb84eaeeae8a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"start_at\": \"<dateTime>\",\n  \"end_at\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sessions/:session_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions",
										":session_id"
									],
									"variable": [
										{
											"key": "session_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update the session"
							},
							"response": [
								{
									"id": "9ff184ea-470b-4705-a2ec-ec2eab5a13f9",
									"name": "The session was updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start_at\": \"<dateTime>\",\n  \"end_at\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "1dfa5b60-5d0d-4b7f-bd2c-8dcdfed7bfdf",
									"name": "The session does not exist",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start_at\": \"<dateTime>\",\n  \"end_at\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "47042033-0ede-4650-934b-01cfced8a21a",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start_at\": \"<dateTime>\",\n  \"end_at\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "Delete the session",
							"id": "d0029694-a90d-47e1-89b5-71156f31f9b4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sessions/:session_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions",
										":session_id"
									],
									"variable": [
										{
											"key": "session_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete the session"
							},
							"response": [
								{
									"id": "cf337bd3-dcdc-4c66-abd2-dedcf004d68b",
									"name": "The session was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "a18f201a-b8ca-415b-a98b-4cf8e20e49fb",
									"name": "The session does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "f8167c19-85e0-421e-8748-475a1d4b4c39",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						}
					],
					"id": "fc936daf-4c95-4a58-8be3-f519567cab71"
				},
				{
					"name": "Return all sessions",
					"id": "61bb581e-4e4c-4762-aa15-0d3108f667f1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sessions"
							]
						},
						"description": "Return all sessions"
					},
					"response": [
						{
							"id": "472bfc2d-c8b8-4cf5-ac88-18b6f5c716e7",
							"name": "A collection of all sessions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"start_at\": \"<dateTime>\",\n      \"end_at\": \"<dateTime>\",\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      }\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"start_at\": \"<dateTime>\",\n      \"end_at\": \"<dateTime>\",\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      }\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "36131ec1-36b7-4d4e-b08f-4b712ca7fad6"
		},
		{
			"name": "sections",
			"item": [
				{
					"name": "{section_id}",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "{user_id}",
									"item": [
										{
											"name": "Assign the user to the section. The `expires_on` date should be at the  latest the 31st August that follows the `valid_on` date.\n",
											"id": "fdd9d7a5-5e2d-4ede-ae90-03d2dad71168",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sections/:section_id/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sections",
														":section_id",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "section_id",
															"value": "<integer>"
														},
														{
															"key": "user_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Assign the user to the section. The `expires_on` date should be at the  latest the 31st August that follows the `valid_on` date.\n"
											},
											"response": [
												{
													"id": "368b7e25-9740-4cb2-8d6f-aed9e9b265d0",
													"name": "The user was assigned to the section",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sections/:section_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sections",
																":section_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "section_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "21460feb-b6bc-4d1e-8cd2-6d94c2a91689",
													"name": "The user or the section does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sections/:section_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sections",
																":section_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "section_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "eb3a3dde-22c4-4e91-abae-6314e1de1ec0",
													"name": "Untitled Example",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sections/:section_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sections",
																":section_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "section_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
												}
											]
										},
										{
											"name": "Unassign the user from the section",
											"id": "f289125b-180d-4c3d-94f2-1e639ec70b71",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/sections/:section_id/users/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sections",
														":section_id",
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "section_id",
															"value": "<integer>"
														},
														{
															"key": "user_id",
															"value": "<integer>"
														}
													]
												},
												"description": "Unassign the user from the section"
											},
											"response": [
												{
													"id": "2b2960f2-313c-4738-867b-9acf3ba488c0",
													"name": "The user was unassigned",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sections/:section_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sections",
																":section_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "section_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												},
												{
													"id": "169a8056-06df-4f14-879d-692e1e0a8fcd",
													"name": "The user or the section does not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/sections/:section_id/users/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sections",
																":section_id",
																"users",
																":user_id"
															],
															"variable": [
																{
																	"key": "section_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": []
												}
											]
										}
									],
									"id": "f21ac7c7-a773-4e68-8bec-57014cda037f"
								},
								{
									"name": "Return all users for the section. If multiple identical users exist (identified by their ID), the response only contains distinct users.\n",
									"id": "3bbce26b-ca3a-4eae-a703-6c2a3f808c24",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id/users?date=<date>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id",
												"users"
											],
											"query": [
												{
													"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
													"key": "date",
													"value": "<date>"
												}
											],
											"variable": [
												{
													"key": "section_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Return all users for the section. If multiple identical users exist (identified by their ID), the response only contains distinct users.\n"
									},
									"response": [
										{
											"id": "55756958-70ff-4a01-95c0-8b4a16a70285",
											"name": "A collection of users",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sections/:section_id/users?date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sections",
														":section_id",
														"users"
													],
													"query": [
														{
															"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
															"key": "date",
															"value": "<date>"
														}
													],
													"variable": [
														{
															"key": "section_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"email\": \"<email>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"email\": \"<email>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
										},
										{
											"id": "441c6eaa-b256-4c36-8f7f-58488a7dfb5d",
											"name": "The section does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sections/:section_id/users?date=<date>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sections",
														":section_id",
														"users"
													],
													"query": [
														{
															"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
															"key": "date",
															"value": "<date>"
														}
													],
													"variable": [
														{
															"key": "section_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": []
										}
									]
								}
							],
							"id": "3ad806ae-e7cd-4a40-b8e8-d6eabbca01f0"
						},
						{
							"name": "sessions",
							"item": [
								{
									"name": "Return all sessions for the section.",
									"id": "e384915b-1ec3-4312-a1a8-ea1086aa8ce5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id/sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id",
												"sessions"
											],
											"variable": [
												{
													"key": "section_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Return all sessions for the section."
									},
									"response": [
										{
											"id": "8c3484a7-285b-4697-913c-673c5afdff4b",
											"name": "A collection of sessions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sections/:section_id/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sections",
														":section_id",
														"sessions"
													],
													"variable": [
														{
															"key": "section_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"start_at\": \"<dateTime>\",\n      \"end_at\": \"<dateTime>\",\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      }\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"start_at\": \"<dateTime>\",\n      \"end_at\": \"<dateTime>\",\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      }\n    }\n  ]\n}"
										},
										{
											"id": "6ef195f9-5980-4113-8e40-c879e2a6f257",
											"name": "The section does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sections/:section_id/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sections",
														":section_id",
														"sessions"
													],
													"variable": [
														{
															"key": "section_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": []
										}
									]
								},
								{
									"name": "Create a new session for this section",
									"id": "359bb541-0aa4-4c9c-adc6-cb2e7de7a4d1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"start_at\": \"<dateTime>\",\n  \"end_at\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id/sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id",
												"sessions"
											],
											"variable": [
												{
													"key": "section_id",
													"value": "<integer>"
												}
											]
										},
										"description": "Create a new session for this section"
									},
									"response": [
										{
											"id": "0721f0bd-d995-4583-8970-c3175fd74768",
											"name": "The session was created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"start_at\": \"<dateTime>\",\n  \"end_at\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sections/:section_id/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sections",
														":section_id",
														"sessions"
													],
													"variable": [
														{
															"key": "section_id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"description": {
														"content": "The location of the created session",
														"type": "text/plain"
													},
													"key": "Location",
													"value": "<string>"
												}
											],
											"cookie": [],
											"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"start_at\": \"<dateTime>\",\n  \"end_at\": \"<dateTime>\",\n  \"section\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"is_free\": \"<boolean>\"\n  }\n}"
										},
										{
											"id": "32e8a0d8-1935-45b3-9d26-c6104272162b",
											"name": "Untitled Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"start_at\": \"<dateTime>\",\n  \"end_at\": \"<dateTime>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sections/:section_id/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sections",
														":section_id",
														"sessions"
													],
													"variable": [
														{
															"key": "section_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
										}
									]
								}
							],
							"id": "c64dc804-c1dc-41d3-8558-45a635a3e384"
						},
						{
							"name": "Return the section",
							"id": "a8540d24-5e8c-442a-b428-81ae6be9d866",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sections/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections",
										":section_id"
									],
									"variable": [
										{
											"key": "section_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Return the section"
							},
							"response": [
								{
									"id": "6760bae5-2f9d-402c-be57-b82c31ceecfa",
									"name": "The section",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"is_free\": \"<boolean>\"\n}"
								},
								{
									"id": "9d92109b-de81-4b45-8663-03bf48e9abe0",
									"name": "The section does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								}
							]
						},
						{
							"name": "Update the section",
							"id": "2d1f7666-10f2-47de-8b1e-12cdd40fbcc6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"is_free\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sections/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections",
										":section_id"
									],
									"variable": [
										{
											"key": "section_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update the section"
							},
							"response": [
								{
									"id": "1f95330b-ebcf-463d-b9fb-93581a5423c0",
									"name": "The section was updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"is_free\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "00c4d3a4-8043-4362-97d1-868a4b6255f1",
									"name": "The section does not exist",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"is_free\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "bf6bf4de-8533-406c-b470-4f4889fd0fbe",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"is_free\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "Delete the section",
							"id": "0f1d47ec-66ce-4f7c-ad0d-e6397793e0e6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sections/:section_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections",
										":section_id"
									],
									"variable": [
										{
											"key": "section_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete the section"
							},
							"response": [
								{
									"id": "821f1566-a5c3-4e1e-a2cd-5ed945dc520e",
									"name": "The section was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "61ec450b-b141-41c0-aa76-6994393e3b64",
									"name": "The section does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "3292203a-7761-4b58-9453-e3764a89157f",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sections/:section_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sections",
												":section_id"
											],
											"variable": [
												{
													"key": "section_id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						}
					],
					"id": "2cfde7a8-c59f-404b-b11b-74409c1ec99a"
				},
				{
					"name": "Return all sections",
					"id": "c4fca896-8776-40ec-90b1-cd2478f078ff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sections"
							]
						},
						"description": "Return all sections"
					},
					"response": [
						{
							"id": "ac76970b-a7d8-4a9b-8223-1d043765a394",
							"name": "A collection of all sections",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"is_free\": \"<boolean>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"is_free\": \"<boolean>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new section",
					"id": "5204cb2d-232d-4738-8c2b-9cde17d67298",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"is_free\": false\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/sections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sections"
							]
						},
						"description": "Create a new section"
					},
					"response": [
						{
							"id": "32bf4569-fb06-419d-b834-9f2306a19258",
							"name": "The section was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"is_free\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"description": {
										"content": "The location of the created section",
										"type": "text/plain"
									},
									"key": "Location",
									"value": "<string>"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"is_free\": \"<boolean>\"\n}"
						},
						{
							"id": "5db7391f-87b6-45be-a27f-74a1ce73a9f3",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"is_free\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			],
			"id": "62cf182b-201a-47e3-b94d-934dd1d01f8f"
		},
		{
			"name": "registrations",
			"item": [
				{
					"name": "Create a new registration. If the user is found, assign it the registration;  otherwise, also create a new user.\n",
					"id": "4acd712a-b9f9-4ee0-9b59-05125d9e8371",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\"\n  },\n  \"date_of_birth\": \"<date>\",\n  \"phone\": \"<string>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/registrations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"registrations"
							]
						},
						"description": "Create a new registration. If the user is found, assign it the registration;  otherwise, also create a new user.\n"
					},
					"response": [
						{
							"id": "bcfdf39e-8719-4f10-9d26-0db1a40ae284",
							"name": "The registration was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\"\n  },\n  \"date_of_birth\": \"<date>\",\n  \"phone\": \"<string>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/registrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registrations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"description": {
										"content": "The location of the created registration",
										"type": "text/plain"
									},
									"key": "Location",
									"value": "<string>"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"date_of_birth\": \"<date>\",\n  \"phone\": \"<string>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						},
						{
							"id": "7e9b59b7-5bd7-473c-bd35-4e8586ee7ccb",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\"\n  },\n  \"date_of_birth\": \"<date>\",\n  \"phone\": \"<string>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/registrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registrations"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			],
			"id": "142b3d07-f67a-407a-b8bf-7c6015d792dc"
		},
		{
			"name": "payment-template",
			"item": [
				{
					"name": "{payment_template_id}",
					"item": [
						{
							"name": "Return the payment template",
							"id": "25bb68af-4036-40f8-9807-7ea04565ac54",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payment-template/:payment_template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment-template",
										":payment_template_id"
									],
									"variable": [
										{
											"key": "payment_template_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Return the payment template"
							},
							"response": [
								{
									"id": "5c613131-6574-41a1-a99b-b4f4a7e32b94",
									"name": "The payment template",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment-template/:payment_template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment-template",
												":payment_template_id"
											],
											"variable": [
												{
													"key": "payment_template_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"section\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"is_free\": \"<boolean>\"\n  },\n  \"amount\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}"
								},
								{
									"id": "20674de0-e996-432a-8ab8-0da068284605",
									"name": "The payment template does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment-template/:payment_template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment-template",
												":payment_template_id"
											],
											"variable": [
												{
													"key": "payment_template_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								}
							]
						},
						{
							"name": "Update the payment template",
							"id": "b548e92b-72c1-4d63-bf77-bc0d72446d09",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payment-template/:payment_template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment-template",
										":payment_template_id"
									],
									"variable": [
										{
											"key": "payment_template_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update the payment template"
							},
							"response": [
								{
									"id": "0515658c-da9b-4075-aa89-920a43f4316a",
									"name": "The payment template was updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment-template/:payment_template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment-template",
												":payment_template_id"
											],
											"variable": [
												{
													"key": "payment_template_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "525eca59-8c0b-4cd0-bfe1-6e3f0f1e6f8d",
									"name": "The payment template does not exist",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment-template/:payment_template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment-template",
												":payment_template_id"
											],
											"variable": [
												{
													"key": "payment_template_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "6d70b3ab-54b1-412e-a100-2aadf16e5228",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/payment-template/:payment_template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment-template",
												":payment_template_id"
											],
											"variable": [
												{
													"key": "payment_template_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "Delete the payment template",
							"id": "8d3b13fd-676c-469b-8860-c7582f4ff15b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payment-template/:payment_template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment-template",
										":payment_template_id"
									],
									"variable": [
										{
											"key": "payment_template_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete the payment template"
							},
							"response": [
								{
									"id": "136ceb0f-19da-4ec1-82e3-07e9b770125d",
									"name": "The payment template was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment-template/:payment_template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment-template",
												":payment_template_id"
											],
											"variable": [
												{
													"key": "payment_template_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "3a4a15d5-0d11-4bf8-bd3b-44c6488cb982",
									"name": "The payment template does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment-template/:payment_template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment-template",
												":payment_template_id"
											],
											"variable": [
												{
													"key": "payment_template_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "6b6fdeeb-48b7-43a4-8ab4-fedad71f9de1",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/payment-template/:payment_template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"payment-template",
												":payment_template_id"
											],
											"variable": [
												{
													"key": "payment_template_id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						}
					],
					"id": "2db5b912-15a2-425e-9271-60f4a4e74308"
				},
				{
					"name": "Return all payment templates",
					"id": "f120b9e9-4af6-45ea-b2a5-5929b5591370",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/payment-template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment-template"
							]
						},
						"description": "Return all payment templates"
					},
					"response": [
						{
							"id": "f35d7f75-4a32-4bdf-a7f4-7798c7f6739c",
							"name": "A collection of all payment templates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/payment-template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment-template"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      },\n      \"amount\": \"<number>\",\n      \"number_of_sessions\": \"<integer>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      },\n      \"amount\": \"<number>\",\n      \"number_of_sessions\": \"<integer>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new payment template",
					"id": "c50dcef8-a7c5-4f0f-a0dd-d5662cdfbda8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"section_id\": \"<integer>\",\n  \"number_of_sessions\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/payment-template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payment-template"
							]
						},
						"description": "Create a new payment template"
					},
					"response": [
						{
							"id": "8de467e1-f3b2-4a86-a8ea-8111ed1e8a41",
							"name": "The payment template was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"section_id\": \"<integer>\",\n  \"number_of_sessions\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payment-template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment-template"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"description": {
										"content": "The location of the created payment template",
										"type": "text/plain"
									},
									"key": "Location",
									"value": "<string>"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"section\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"is_free\": \"<boolean>\"\n  },\n  \"amount\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}"
						},
						{
							"id": "3488c4c5-8220-4a41-92f2-11a694db7266",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<number>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"section_id\": \"<integer>\",\n  \"number_of_sessions\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/payment-template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"payment-template"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			],
			"id": "e5697cfa-04be-4386-835d-446b8487c9b6"
		},
		{
			"name": "memberships",
			"item": [
				{
					"name": "{membership_id}",
					"item": [
						{
							"name": "Return the membership",
							"id": "1f4b598d-64ec-4fbd-99bf-b7665b7b04ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/memberships/:membership_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"memberships",
										":membership_id"
									],
									"variable": [
										{
											"key": "membership_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Return the membership"
							},
							"response": [
								{
									"id": "c35cc282-6145-4cf3-924b-a063cbf6d698",
									"name": "The membership",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/memberships/:membership_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "membership_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								},
								{
									"id": "d8f5e0fa-dd00-4d3c-9de5-d0168aec35a1",
									"name": "The membership does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/memberships/:membership_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "membership_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								}
							]
						},
						{
							"name": "Update the membership",
							"id": "07f2b573-0d9e-4b76-bdfe-ea3954431552",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/memberships/:membership_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"memberships",
										":membership_id"
									],
									"variable": [
										{
											"key": "membership_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update the membership"
							},
							"response": [
								{
									"id": "38c85b14-803a-4737-a331-c26b901f8cf6",
									"name": "The membership was updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/memberships/:membership_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "membership_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "c9e5ae3e-2638-4078-bcbe-973229d1c4a6",
									"name": "The membership does not exist",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/memberships/:membership_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "membership_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "531033a3-1e43-4a5e-8d79-c5f1a4098a54",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/memberships/:membership_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "membership_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "Delete the membership",
							"id": "ace22dd0-ff8b-4f02-945d-4d712cc66479",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/memberships/:membership_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"memberships",
										":membership_id"
									],
									"variable": [
										{
											"key": "membership_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete the membership"
							},
							"response": [
								{
									"id": "0ccfe6bc-7ee8-4033-9a2d-53b5267409e0",
									"name": "The membership was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/memberships/:membership_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "membership_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "0a268931-15b8-4141-9ef3-e40ecc6e14e7",
									"name": "The membership does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/memberships/:membership_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "membership_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "c84f6811-7de6-404c-a16b-aa31bc376aad",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/memberships/:membership_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "membership_id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						}
					],
					"id": "e7237072-8170-4db6-8bfe-57b9593c26b8"
				},
				{
					"name": "Return all memberships",
					"id": "3aef3f07-dc56-4500-b8d4-24d556677e72",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/memberships?date=<date>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"memberships"
							],
							"query": [
								{
									"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
									"key": "date",
									"value": "<date>"
								}
							]
						},
						"description": "Return all memberships"
					},
					"response": [
						{
							"id": "82a15234-a949-45cc-9751-fa4d1cd45f51",
							"name": "A collection of all memberships",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/memberships?date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"memberships"
									],
									"query": [
										{
											"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
											"key": "date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"amount_paid\": \"<number>\",\n      \"comment\": \"<string>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"payed_on\": \"<date>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"amount_paid\": \"<number>\",\n      \"comment\": \"<string>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"payed_on\": \"<date>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new membership",
					"id": "bd98fd51-f1c2-4f9b-84d5-716396577ddb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": \"<string>\",\n  \"amount_paid\": \"<number>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"comment\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/memberships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"memberships"
							]
						},
						"description": "Create a new membership"
					},
					"response": [
						{
							"id": "53585487-d4eb-4747-bfb6-ab0008adcc49",
							"name": "The membership was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": \"<string>\",\n  \"amount_paid\": \"<number>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"memberships"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"description": {
										"content": "The location of the created membership",
										"type": "text/plain"
									},
									"key": "Location",
									"value": "<string>"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						},
						{
							"id": "e91b68a1-f945-41d3-a394-ee009ec52991",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": \"<string>\",\n  \"amount_paid\": \"<number>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"memberships"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			],
			"id": "980a39a6-9eff-40c4-a308-9321842e98e7"
		},
		{
			"name": "cards",
			"item": [
				{
					"name": "{card_id}",
					"item": [
						{
							"name": "Return the card",
							"id": "73befbc0-cf30-4cb4-befd-e9968fddd405",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Return the card"
							},
							"response": [
								{
									"id": "926f04c4-e5d4-4c8f-a28d-dec10f9c0413",
									"name": "The card",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cards/:card_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"variable": [
												{
													"key": "card_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"section\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"is_free\": \"<boolean>\"\n  },\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"remaining_sessions\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
								},
								{
									"id": "d268015e-ca3d-4605-89ce-cb09efc011de",
									"name": "The card does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cards/:card_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"variable": [
												{
													"key": "card_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								}
							]
						},
						{
							"name": "Update the card",
							"id": "3e4017ea-5b15-4bd5-b83a-551395f184c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"remaining_sessions\": \"<integer>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Update the card"
							},
							"response": [
								{
									"id": "2bc89d9f-6f64-4cac-816a-8572887acfe6",
									"name": "The card was updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"remaining_sessions\": \"<integer>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/cards/:card_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"variable": [
												{
													"key": "card_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "b0298abf-08e5-4cf7-b86b-cc8c5fe4f68f",
									"name": "The card does not exist",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"remaining_sessions\": \"<integer>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/cards/:card_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"variable": [
												{
													"key": "card_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "18710fec-3d98-41e0-96ea-ae0a38e56d7d",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount_paid\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"remaining_sessions\": \"<integer>\",\n  \"comment\": \"<string>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/cards/:card_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"variable": [
												{
													"key": "card_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						},
						{
							"name": "Delete the card",
							"id": "05700588-3bf5-4916-8261-05a7d49b87bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id",
											"value": "<integer>"
										}
									]
								},
								"description": "Delete the card"
							},
							"response": [
								{
									"id": "74583ab5-a890-4eb5-8a36-e93ead5b5814",
									"name": "The card was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cards/:card_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"variable": [
												{
													"key": "card_id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "a26ef62b-064a-40f1-84db-8aa1464f6db6",
									"name": "The card does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cards/:card_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"variable": [
												{
													"key": "card_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": []
								},
								{
									"id": "ee990b99-d607-47e2-8a6f-0b4e59bcf2fa",
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cards/:card_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"variable": [
												{
													"key": "card_id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
								}
							]
						}
					],
					"id": "a59ae764-aa6e-4bd1-8e1e-31f5df65417b"
				},
				{
					"name": "Return all cards",
					"id": "89333449-2334-4876-b5ec-7f70a20de7c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards?date=<date>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards"
							],
							"query": [
								{
									"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
									"key": "date",
									"value": "<date>"
								}
							]
						},
						"description": "Return all cards"
					},
					"response": [
						{
							"id": "bd553c65-c0c6-4762-8cb3-52cf115e586f",
							"name": "A collection of all cards",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards?date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards"
									],
									"query": [
										{
											"description": "The reference date: only objects for which the date is between fields valid_on and expires_on are returned. Defaults to now.\n",
											"key": "date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"contents\": [\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"amount_paid\": \"<number>\",\n      \"comment\": \"<string>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      },\n      \"payed_on\": \"<date>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"number_of_sessions\": \"<integer>\",\n      \"remaining_sessions\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"self\": \"<string>\",\n      \"kind\": \"<string>\",\n      \"id\": \"<integer>\",\n      \"amount_paid\": \"<number>\",\n      \"comment\": \"<string>\",\n      \"user\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"created_at\": \"<dateTime>\",\n        \"updated_at\": \"<dateTime>\"\n      },\n      \"section\": {\n        \"self\": \"<string>\",\n        \"kind\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"is_free\": \"<boolean>\"\n      },\n      \"payed_on\": \"<date>\",\n      \"valid_on\": \"<date>\",\n      \"expires_on\": \"<date>\",\n      \"number_of_sessions\": \"<integer>\",\n      \"remaining_sessions\": \"<integer>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Create a new card",
					"id": "7b28f391-f303-4342-923b-5929de91f1b5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": \"<string>\",\n  \"amount_paid\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"section\": \"<string>\",\n  \"remaining_sessions\": \"remaining_sessions\",\n  \"comment\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards"
							]
						},
						"description": "Create a new card"
					},
					"response": [
						{
							"id": "4caece83-cc3b-4bb9-8663-72ac5a5540c0",
							"name": "The card was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": \"<string>\",\n  \"amount_paid\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"section\": \"<string>\",\n  \"remaining_sessions\": \"remaining_sessions\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"description": {
										"content": "The location of the created card",
										"type": "text/plain"
									},
									"key": "Location",
									"value": "<string>"
								}
							],
							"cookie": [],
							"body": "{\n  \"self\": \"<string>\",\n  \"kind\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"amount_paid\": \"<number>\",\n  \"comment\": \"<string>\",\n  \"user\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\"\n  },\n  \"section\": {\n    \"self\": \"<string>\",\n    \"kind\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"is_free\": \"<boolean>\"\n  },\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"remaining_sessions\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\"\n}"
						},
						{
							"id": "87570b1e-5d2a-4353-adef-a1142ec32f36",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": \"<string>\",\n  \"amount_paid\": \"<number>\",\n  \"number_of_sessions\": \"<integer>\",\n  \"payed_on\": \"<date>\",\n  \"valid_on\": \"<date>\",\n  \"expires_on\": \"<date>\",\n  \"section\": \"<string>\",\n  \"remaining_sessions\": \"remaining_sessions\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": {}\n}"
						}
					]
				}
			],
			"id": "cebc3a3c-2452-49b1-99cd-569645d4a438"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fb191ad1-2cec-42ef-8add-e62b49114d5f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "82729383-55ef-4e89-9544-9e461abb9730",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}